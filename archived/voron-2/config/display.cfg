[display]
# mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
contrast: 63
spi_software_mosi_pin: EXP2_6  # PA7
spi_software_miso_pin: EXP2_1  # PA6
spi_software_sclk_pin: EXP2_2  # PA5
display_group: __voron_display # Status display override

[neopixel fysetc_mini12864]
# To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

## Set RGB values on boot up for each Neopixel.
## Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
  SET_LED LED=fysetc_mini12864 RED=0.61 GREEN=0.141 BLUE=0.137 INDEX=1 TRANSMIT=0
  SET_LED LED=fysetc_mini12864 RED=0.3 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
  SET_LED LED=fysetc_mini12864 RED=0.3 GREEN=0 BLUE=0 INDEX=3

## Disable unused menu items
[menu __main __octoprint]
type: disabled

[menu __main __sdcard]
type: disabled

[menu __main __temp __preheat_pla]
type: disabled

[menu __main __temp __preheat_abs]
type: disabled

[menu __main __control __move_preheat]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Move to preheat location
gcode:
  MOVE_PREHEAT

## Glyphs
[display_glyph chamber]
data:
  0000000000000000
  1111111111111111
  1000010000100001
  1000010000100001
  1000011111100001
  1000000000000001
  1000000000000001
  1000001111000001
  1011101001011101
  1000001111000001
  1000000110000001
  1000000000000001
  1011111111111101
  1000100000010001
  1111111111111111
  0000000000000000

## Status display override
[display_data __voron_display extruder]
position: 0, 0
text:
  {% set active_extruder = printer.toolhead.extruder %}
  { render("_heater_temperature", param_heater_name=active_extruder) }

[display_data __voron_display fan]
position: 0, 10
text: { render("_fan_speed") }

[display_data __voron_display heater_bed]
position: 1, 0
text: { render("_heater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display speed_factor]
position: 1, 10
text:
  ~feedrate~
  { "{:>4.0%}".format(printer.gcode_move.speed_factor) }

[display_data __voron_display chamber]
position: 2, 0
text:
  ~chamber~
  { "%3.0f" % (printer['temperature_sensor chamber'].temperature) }
  ~degrees~

[display_data __voron_display print_progress]
position: 2, 6
text: { "{:^10.0%}".format(printer.display_status.progress) }
[display_data __voron_display progress_bar]
position: 2, 7 # Draw graphical progress bar after text is written
text: { draw_progress_bar(2, 6, 10, printer.display_status.progress) }

[display_data __voron_display print_status]
position: 3, 0
text: { render("_print_status") }

[gcode_macro MOVE_PREHEAT]
description: Move to preheat location at X200 Y50 Z20
gcode:
  SAVE_GCODE_STATE NAME=before_move_preheat
  G90
  G1 Z20 F300
  G1 X200 Y50 F1200
  RESTORE_GCODE_STATE NAME=before_move_preheat
