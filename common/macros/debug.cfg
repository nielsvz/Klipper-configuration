[gcode_macro SEARCH_VARS]
description: Debug: Search all variables based on the provided value (S parameter)
gcode:
  {% set search = params.S|lower %}
  {% set ns = namespace() %}
  {% for item in printer  %}
      {% if ' ' in item %}
          {% set ns.path = ['printer', "['%s']" % (item), ''] %}
      {% else %}
          {% set ns.path = ['printer.', item, ''] %}
      {% endif %}

      {% if search in ns.path|lower %}
          { action_respond_info(ns.path|join) }
      {% endif %}

      {% if printer[item].items() %}
          {% for childkey, child in printer[item].items() recursive %}
              {% set ns.path = ns.path[:loop.depth|int + 1] %}

              {% if ' ' in childkey %}
                  {% set null = ns.path.append("['%s']" % (childkey)) %}
              {% else %}
                  {% set null = ns.path.append(".%s" % (childkey)) %}
              {% endif %}

              {% if child is mapping  %}
                  { loop(child.items()) }
              {% else %}
                  {% if search in ns.path|lower %}
                      { action_respond_info("%s : %s" % (ns.path|join, child)) }
                  {% endif %}
              {% endif %}

          {% endfor %}
      {% endif %}
  {% endfor %}

[gcode_macro DUMP_WARNINGS]
description: Debug: Print all warning messages from klipper
gcode:
  {% set parameters = ["printer.configfile.warnings:"] %}
  {% for warning in printer.configfile.warnings %}
      {% set parameters = parameters.append("%s -> %s -> %s\n%s" % (warning.type, warning.section, warning.option, warning.message)) %}
  {% endfor %}
  {action_respond_info(parameters|join("\n"))}