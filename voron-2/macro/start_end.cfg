[gcode_macro G32]
gcode:
  BED_MESH_CLEAR
  {% if "z" not in printer.toolhead.homed_axes %} ; G28 Home if needed
    M117 Homing
    G28
  {% endif %}
  M117 Leveling gantry
  QUAD_GANTRY_LEVEL                               ; Level Gantry
  M117 Homing Z
  G28 Z                                           ; Home Z again
  G0 X150 Y150 Z20 F6000

[gcode_macro PRINT_START]
## Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  _CHECK_USER_VARIABLES
  {% set BED_TEMP = params.BED_TEMP | default(100) | float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(240) | float %}
  {% set EXTRUDER_TEMP_INITIAL = EXTRUDER_TEMP - 40.0 %}
  {% set CHAMBER_TEMP = params.CHAMBER_TEMP | default(50) | float %}
  {% set FILAMENT_TYPE = params.FILAMENT_TYPE | default("NO-FILAMENT") | string %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE | default(0.40) | float %}
  SET_GCODE_OFFSET Z=0      ; reset Z offset - REQUIRED with flexplate macro
  M117 Heating...
  M106 S0                   ; turn off part cooling fan
  M140 S{BED_TEMP}          ; set bed final temp
  FILTER_START FILAMENT_TYPE={FILAMENT_TYPE}
  M190 S{BED_TEMP}          ; wait for bed final temp
  M104 S{EXTRUDER_TEMP_INITIAL}                     ; set extruder initial temp
  UPDATE_DELAYED_GCODE ID=CHECK_HOTEND_FAN_RPM DURATION=10 ; start monitoring hotend fan
  M109 S{EXTRUDER_TEMP}                             ; wait for extruder final temp
  G21                       ; set units to millimeters
  G90                       ; use absolute coordinates
  M83                       ; use relative distances
  G32                       ; level and clean
  _SET_PLATE_OFFSET         ; load flexplate Z offset
  PURGE_LINE NOZZLE_SIZE={NOZZLE_SIZE}
  FILAMENT_PRESSURE_ADVANCE FILAMENT_TYPE={FILAMENT_TYPE} NOZZLE_SIZE={NOZZLE_SIZE}
  M117 Printing [{FILAMENT_TYPE}]
  UPDATE_DELAYED_GCODE ID=CLEAR_DISPLAY DURATION=120

[gcode_macro PRINT_END]
## Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
  M400                          ; wait for buffer to clear
  UPDATE_DELAYED_GCODE ID=CHECK_HOTEND_FAN_RPM DURATION=0 ; stop monitoring hotend fan
  G92 E0                        ; zero the extruder
  G1 E-4.0 F3600                ; retract filament
  G91                           ; relative positioning
  G0 Z1.00 X20.0 Y20.0 F20000   ; move nozzle to remove stringing
  TURN_OFF_HEATERS
  M107                          ; turn off fan
  G1 Z2 F3000                   ; move nozzle up 2mm
  G90                           ; absolute positioning
  G0 X280 Y280 F3600            ; park nozzle at rear
  BED_MESH_CLEAR
  FILTER_MAX
  UPDATE_DELAYED_GCODE ID=FILTER_STOP DURATION=5   ; delay filter fan shutdown
  UPDATE_DELAYED_GCODE ID=CHECK_HOTEND_FAN_RPM DURATION=0 ; stop monitoring hotend fan

[gcode_macro FILAMENT_PRESSURE_ADVANCE]
gcode:
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE | default(0) | float %}
  {% set FILAMENT_TYPE = params.FILAMENT_TYPE | default("NO-PA") | string %}

  # TODO: tune 0.6-PET again

  {% set PA_VALUES = ({
      0.4: {
        "ABS": 0.048,
        "ASA": 0.048,
        "ABS-X": 0.048,
        "ABSMAX": 0.057,
        "PC": 0.075,
        "PET": 0.085,
        "PLA": 0.051,
      },
      0.6: {
        "ABS": 0.04,
        "ABS-X": 0.04,
        "ASA": 0.04,
        "ABSMAX": 0.042,
        "PET": 0.07,
      }
    }) %}

  {% if NOZZLE_SIZE in PA_VALUES %}
    { action_respond_info('Filament PA - nozzle size "%s" found in PA values.' % (NOZZLE_SIZE)) }
    {% if FILAMENT_TYPE in PA_VALUES[NOZZLE_SIZE] %}
      {action_respond_info('Filament PA - filament type "%s" found in PA values.' % (FILAMENT_TYPE))}
      SET_PRESSURE_ADVANCE ADVANCE={ PA_VALUES[NOZZLE_SIZE][FILAMENT_TYPE] | float }
    {% else %}
      {action_respond_info('Filament PA - filament type "%s" not found in PA values!' % (FILAMENT_TYPE))}
    {% endif %}
  {% else %}
    {action_respond_info('Filament PA - nozzle size "%s" not found in PA values!' % (NOZZLE_SIZE))}
  {% endif %}
