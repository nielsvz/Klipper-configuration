[gcode_macro _PRINT_VARIABLES]
variable_bed_temp: 0.0
variable_extruder_temp: 0.0
variable_chamber_temp: 0.0
variable_filament_type: "NO-FILAMENT"
variable_nozzle_size: 0.0
gcode:
  {% set reset = params.RESET | default(0) | int %}
  {% if reset %}
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=bed_temp VALUE=0.0
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_temp VALUE=0.0
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=chamber_temp VALUE=0.0
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=filament_type VALUE='"NO-FILAMENT"'
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=nozzle_size VALUE=0.0
    SET_IDLE_TIMEOUT TIMEOUT={ printer.configfile.settings.idle_timeout.timeout | float }
  {% endif %}

[gcode_macro G32]
gcode:
  BED_MESH_CLEAR
  {% if "z" not in printer.toolhead.homed_axes %} ; G28 Home if needed
    M117 Homing
    G28
  {% endif %}
  M117 Leveling gantry
  QUAD_GANTRY_LEVEL                               ; Level Gantry
  M117 Homing Z
  G28 Z                                           ; Home Z again
  G0 X150 Y150 Z20 F6000

[gcode_macro PRINT_START]
description: Print start macro to be used by your slicer of choice
gcode:
  {% set BED_TEMP = params.BED_TEMP | default(100) | float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(240) | float %}
  {% set CHAMBER_TEMP = params.CHAMBER_TEMP | default(50) | float %}
  {% set FILAMENT_TYPE = params.FILAMENT_TYPE | default("NO-FILAMENT") | string %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE | default(0.40) | float %}
  {% set PURGE_LINE = params.PURGE_LINE | default(1) | int %}
  SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=bed_temp VALUE='{BED_TEMP}'
  SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_temp VALUE='{EXTRUDER_TEMP}'
  SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=chamber_temp VALUE='{CHAMBER_TEMP}'
  SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=filament_type VALUE='"{FILAMENT_TYPE}"'
  SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=nozzle_size VALUE='{NOZZLE_SIZE}'
  _CHECK_USER_VARIABLES
  _PRINT_START_PREHEAT
  _PRINT_START_PREPARE
  _FLEXPLATE_APPLY_OFFSET   ; load flexplate Z offset
  {% if PURGE_LINE == 1 %}
  _PRINT_START_PURGE_LINE
  {% endif %}
  _FILAMENT_PRESSURE_ADVANCE
  M117 Printing [{FILAMENT_TYPE}]
  UPDATE_DELAYED_GCODE ID=CLEAR_DISPLAY DURATION=120

[gcode_macro PRINT_END]
description: Print end macro to be used by your slicer of choice
gcode:
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  M400                                                      ; wait for buffer to clear
  G92 E0                                                    ; zero the extruder
  G1 E-4.0 F3600                                            ; retract filament
  G91                                                       ; relative positioning
  G0 Z{z_safe} X20.0 Y20.0 F20000                           ; move nozzle to remove stringing
  UPDATE_DELAYED_GCODE ID=CHECK_HOTEND_FAN_RPM DURATION=0   ; stop monitoring hotend fan
  TURN_OFF_HEATERS
  M107                                                      ; turn off fan
  G1 Z2 F3000                                               ; move nozzle up 2mm
  G90                                                       ; absolute positioning
  G0 X280 Y280 F3600                                        ; park nozzle at rear
  BED_MESH_CLEAR
  FILTER_START SPEED=1.0                                    ; nevermore filter on full speed
  FILTER_STOP PURGE=1                                       ; nevermore filter delayed shutdown
  _PRINT_VARIABLES RESET=1                                  ; reset print variables

[gcode_macro _PRINT_START_PREHEAT]
gcode:
  {% set BED_TEMP = printer['gcode_macro _PRINT_VARIABLES'].bed_temp | float%}
  {% set EXTRUDER_TEMP = printer['gcode_macro _PRINT_VARIABLES'].extruder_temp | float %}
  {% set EXTRUDER_TEMP_INITIAL = EXTRUDER_TEMP - 40 %}
  M106 S0                                                   ; turn off part cooling fan
  M140 S{BED_TEMP}                                          ; set bed final temp
  FILTER_START                                              ; start nevermore filter
  M190 S{BED_TEMP}                                          ; wait for bed final temp
  M104 S{EXTRUDER_TEMP_INITIAL}                             ; set extruder initial temp
  UPDATE_DELAYED_GCODE ID=CHECK_HOTEND_FAN_RPM DURATION=10  ; start monitoring hotend fan
  M109 S{EXTRUDER_TEMP}                                     ; wait for extruder final temp

[gcode_macro _PRINT_START_PREPARE]
gcode:
  SET_GCODE_OFFSET Z=0                                      ; reset Z offset - REQUIRED with flexplate macro
  G21                                                       ; set units to millimeters
  G90                                                       ; use absolute coordinates
  M83                                                       ; use relative distances
  G32                                                       ; level and clean

[gcode_macro _FILAMENT_PRESSURE_ADVANCE]
gcode:
  {% set NOZZLE_SIZE = printer['gcode_macro _PRINT_VARIABLES'].nozzle_size | float %}
  {% set FILAMENT_TYPE = printer['gcode_macro _PRINT_VARIABLES'].filament_type | string %}

  # 0.4 nozzle = SE Vanadium
  {% set PA_VALUES = ({
    "ABS": { 0.4: 0.055 },
    "ABS-X": { 0.4: 0.045 },
    "ASA": { 0.4: 0.055 },
    "PC": { 0.4: 0.058 },
    "PET": { 0.4: 0.085 },
    "PLA": { 0.4: 0.048 },
    "NYLON": { 0.4: 0.075 }
  }) %}

  {% if FILAMENT_TYPE in PA_VALUES %}
    { action_respond_info('Filament PA - filament type "%s" found in PA values.' % (FILAMENT_TYPE)) }
    {% if NOZZLE_SIZE in PA_VALUES[FILAMENT_TYPE] %}
      { action_respond_info('Filament PA - nozzle size "%s" found in PA values.' % (NOZZLE_SIZE)) }
      SET_PRESSURE_ADVANCE ADVANCE={ PA_VALUES[FILAMENT_TYPE][NOZZLE_SIZE] | float }
    {% else %}
      { action_respond_info('Filament PA - nozzle size "%s" not found in PA values!' % (NOZZLE_SIZE)) }
    {% endif %}
  {% else %}
    { action_respond_info('Filament PA - filament type "%s" not found in PA values!' % (FILAMENT_TYPE)) }
  {% endif %}
