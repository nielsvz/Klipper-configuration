[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_52340D9A515137474C202020FF0D1913-if00
x_offset: -21.5
y_offset: 0
mesh_main_direction: x
mesh_runs: 2

[gcode_macro _HOME_VARIABLES]
variable_homing_current_x: 0.7     # run and hold current for x axis during homing
variable_homing_current_y: 0.7     # run and hold current for y axis during homing
variable_homing_pos_x:     111.5   # x position when homing z - center of x axis minus probe x_offset
variable_homing_pos_y:     90.0    # y position when homing z - center of y axis minus probe x_offset
variable_homing_pos_z_end: 5.0     # z position to move to after homing
variable_xy_speed:         200     # x and y speed before homing z (mm/s)
variable_z_speed:          5       # z speed before and after homing (mm/s)
variable_z_hop:            5.0     # distance to lift z before homing
gcode:

[homing_override]
axes: xyz
set_position_z: 0
gcode:
  {% set hv = printer["gcode_macro _HOME_VARIABLES"] %}
  {% set no_params = not('X' in params or 'Y' in params or 'Z' in params) %}

  {% set homing_pos_x = hv.homing_pos_x | float %}
  {% set homing_pos_y = hv.homing_pos_y | float %}
  {% set homing_pos_z_end = hv.homing_pos_z_end | float %}
  {% set run_current_x = printer.configfile.settings['tmc5160 stepper_x'].run_current | float %}
  {% set run_current_y = printer.configfile.settings['tmc5160 stepper_y'].run_current | float %}
  {% set xy_speed = hv.xy_speed | int * 60 %}
  {% set z_hop = hv.z_hop | float %}
  {% set z_speed = hv.z_speed | int * 60 %}
  {% set x_homed = False %}
  {% set y_homed = False %}

  SAVE_GCODE_STATE NAME=homing_override

  RESPOND MSG="Homing Override - Z Hop {z_hop}mm"
  G1 Z{z_hop} F{z_speed}  # Relative positioning is not required because position_z is set to 0

  {% if 'X' in params or no_params %}
    RESPOND MSG="Homing Override - Homing X"
    _HOME_X_AXIS
    {% set x_homed = True %}
  {% endif %}

  {% if 'Y' in params or no_params %}
    RESPOND MSG="Homing Override - Homing Y"
    _HOME_Y_AXIS
    {% set y_homed = True %}
  {% endif %}

  {% if x_homed and y_homed %}
    RESPOND MSG="Homing Override - Homing XY again"
    G90
    G1 X90 Y90 F{xy_speed}
    _HOME_X_AXIS
    G1 X90 Y90 F{xy_speed}
    _HOME_Y_AXIS
  {% endif %}

  {% if 'Z' in params or no_params %}
    G1 X{homing_pos_x} Y{homing_pos_y} F{xy_speed}
    G28 Z0
    G1 Z{homing_pos_z_end} F{z_speed}
  {% endif %}
  RESTORE_GCODE_STATE NAME=homing_override

[z_tilt]
z_positions:
  -74.0, -18.0    # Front Left
  76.0,  217.0    # Rear
  226.0, -18.0    # Front Right
points:
  50, 25          # Front Left
  101, 160        # Rear
  175, 25         # Front Right
speed: 200
horizontal_move_z: 20.0
retries: 10
retry_tolerance: 0.005

# Mesh Bed Settings
[bed_mesh]
speed: 200
horizontal_move_z: 15.0
mesh_min: 20, 20      # X5 Y5 (corrected for beacon XY offset + 20mm)
mesh_max: 153.5, 160  # X175, Y160 (corrected for beacon XY offset + 20mm)
probe_count: 25, 25
fade_start: 0.5
fade_end: 2
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.1
### Warning ###
# Ensure to update if you ever modify probe_count
# Ensure you understand what relative_reference_index means before updating
# because were measuring the offset from the nozzle switch to the bed using the center of the bed, the equation to find the location = ((probe point count)-1)/2
relative_reference_index: 312

[gcode_macro _HOME_X_AXIS]
gcode:
  RESPOND MSG="_HOME_X_AXIS"
  SAVE_GCODE_STATE NAME=home_x_axis
  {% set HOME_CURRENT = printer["gcode_macro _HOME_VARIABLES"].homing_current_x | float %}
  {% set RUN_CURRENT = printer.configfile.settings['tmc5160 stepper_x'].run_current | float %}
  # Set current for sensorless homing
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={ HOME_CURRENT }
  SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={ HOME_CURRENT }
  # Pause to ensure driver stall flag is clear
  G4 P2000
  # Home
  G28 X{printer.configfile.config["stepper_x"]["position_endstop"]}
  # Move away
  G91
  G1 X-5 F1200
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={ RUN_CURRENT }
  SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={ RUN_CURRENT }
  RESTORE_GCODE_STATE NAME=home_x_axis

[gcode_macro _HOME_Y_AXIS]
gcode:
  RESPOND MSG="_HOME_Y_AXIS"
  SAVE_GCODE_STATE NAME=home_y_axis
  {% set HOME_CURRENT = printer["gcode_macro _HOME_VARIABLES"].homing_current_y | float %}
  {% set RUN_CURRENT = printer.configfile.settings['tmc5160 stepper_y'].run_current | float %}
  # Set current for sensorless homing
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={ HOME_CURRENT }
  SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={ HOME_CURRENT }
  # Pause to ensure driver stall flag is clear
  G4 P2000
  # Home
  G28 Y{printer.configfile.config["stepper_y"]["position_endstop"]}
  # Move away
  G91
  G1 Y5 F1200
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={ RUN_CURRENT }
  SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={ RUN_CURRENT }
  RESTORE_GCODE_STATE NAME=home_y_axis

[gcode_macro G32]
gcode:
  BED_MESH_CLEAR
  {% if "z" not in printer.toolhead.homed_axes %} ; G28 Home if needed
    RESPOND MSG="Homing"
    G28
  {% endif %}
  Z_TILT_SCAN
  G28 Z
